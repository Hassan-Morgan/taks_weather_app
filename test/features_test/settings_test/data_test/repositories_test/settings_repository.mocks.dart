// Mocks generated by Mockito 5.1.0 from annotations
// in taqs/test/features_test/settings_test/data_test/repositories_test/settings_repository.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:taqs/features/settings/data/data_source/local_data_source.dart'
    as _i3;
import 'package:taqs/features/settings/data/models/settings_data_model.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [LocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataSource extends _i1.Mock implements _i3.LocalDataSource {
  MockLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<Exception, _i5.SettingsModel>> getSettingsData() =>
      (super.noSuchMethod(Invocation.method(#getSettingsData, []),
          returnValue: Future<_i2.Either<Exception, _i5.SettingsModel>>.value(
              _FakeEither_0<Exception, _i5.SettingsModel>())) as _i4
          .Future<_i2.Either<Exception, _i5.SettingsModel>>);
  @override
  _i4.Future<_i2.Either<Exception, void>> setSettingsData(
          {String? key, bool? value}) =>
      (super.noSuchMethod(
          Invocation.method(#setSettingsData, [], {#key: key, #value: value}),
          returnValue: Future<_i2.Either<Exception, void>>.value(
              _FakeEither_0<Exception, void>())) as _i4
          .Future<_i2.Either<Exception, void>>);
}
